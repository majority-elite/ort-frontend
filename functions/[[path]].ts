import { createPagesFunctionHandler } from '@remix-run/cloudflare-pages';
import {
  clientEnvSchema,
  type ContextEnv,
  serverEnvSchema,
} from '@server/constants/env';
import { getLoadContext, makeAuthSession } from '@server/utils/cloudflare';

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore - the server build file is generated by `remix vite:build`
// eslint-disable-next-line import/no-unresolved, import/order
import * as build from '../build/server';

export const onRequest = async (
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  context: EventContext<ContextEnv, any, any>,
): Promise<Response> => {
  clientEnvSchema.parse(context.env);
  serverEnvSchema.parse(context.env);

  const { authSessionStorage, authSession } = await makeAuthSession(
    {
      authCookieSessionSecret: context.env.AUTH_COOKIE_SESSION_SECRET,
      kvNamespace: context.env.KV_NAMESPACE,
    },
    context.request.headers.get('Cookie'),
  );

  const handleRequest = createPagesFunctionHandler<ContextEnv>({
    build,
    getLoadContext: (args) => getLoadContext(authSession, args),
  });

  const response = await handleRequest(context);

  response.headers.append(
    'Set-Cookie',
    await authSessionStorage.commitSession(authSession),
  );

  return response;
};
